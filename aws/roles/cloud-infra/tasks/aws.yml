---
- name: Assert AWS creds variables
  ansible.builtin.assert:
    that:
      - ec2_access_key is defined
      - ec2_secret_key is defined
    fail_msg: "AWS creds ec2_access_key and ec2_secret_key are not defined"

- name: Create VPC
  ec2_vpc_net:
    state: present
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    name: "{{ ec2_vpc }}"
    cidr_block: "{{ ec2_vpc_cidr }}"
    region: "{{ ec2_region }}"
    tags:
      identity: "{{ ec2_vpc }}"
  register: ec2_vpc_out

- name: Set VPC ID fact
  set_fact:
    ec2_vpc_id: "{{ ec2_vpc_out.vpc.id }}"

- name: Create subnet
  ec2_vpc_subnet:
    state: present
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    vpc_id: "{{ ec2_vpc_id }}"
    cidr: "{{ ec2_vpc_cidr }}"
    region: "{{ ec2_region }}"
    resource_tags:
      identity: "{{ ec2_vpc }}-subnet"
  register: ec2_subnet_out

- name: Set subnet ID fact
  set_fact:
      ec2_subnet_id: "{{ ec2_subnet_out.subnet.id }}"

- name: Create internet gateway
  ec2_vpc_igw:
    state: present
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    vpc_id: "{{ ec2_vpc_id }}"
    region: "{{ ec2_region }}"
  register: ec2_igw_out

- name: Set Internet Gateway ID fact
  set_fact:
      ec2_igw_id: "{{ ec2_igw_out.gateway_id }}"

- name: Create subnet route table
  ec2_vpc_route_table:
    state: present
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    vpc_id: "{{ ec2_vpc_id }}"
    region: "{{ ec2_region }}"
    subnets:
      - "{{ ec2_subnet_id }}"
    routes:
      - dest:         "0.0.0.0/0"
        gateway_id:   "{{ ec2_igw_id }}"
    tags:
      identity: "{{ ec2_vpc }}"

- name: Create security group
  ec2_group:
    state: present
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    name: "{{ ec2_security_group }}"
    description: "{{ ec2_vpc }} default security group"
    vpc_id: "{{ ec2_vpc_id }}"
    region: "{{ ec2_region }}"
    rules: "{{ ec2_sg_rules }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
